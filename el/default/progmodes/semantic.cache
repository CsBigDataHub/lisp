;; Object progmodes/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "progmodes/"
  :tables (list 
   (semanticdb-table "flymake.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("cl" include nil nil [1351 1364]) ("if" code nil nil [1366 1408]) ("flymake-is-running" variable nil nil [1410 1515]) ("make-variable-buffer-local" code nil nil [1516 1564]) ("flymake-timer" variable nil nil [1566 1629]) ("make-variable-buffer-local" code nil nil [1630 1673]) ("flymake-last-change-time" variable nil nil [1675 1744]) ("make-variable-buffer-local" code nil nil [1745 1799]) ("flymake-check-start-time" variable nil nil [1801 1882]) ("make-variable-buffer-local" code nil nil [1883 1937]) ("flymake-check-was-interrupted" variable nil nil [1939 2042]) ("make-variable-buffer-local" code nil nil [2043 2102]) ("flymake-err-info" variable nil nil [2104 2217]) ("make-variable-buffer-local" code nil nil [2218 2264]) ("flymake-new-err-info" variable nil nil [2266 2377]) ("make-variable-buffer-local" code nil nil [2378 2428]) ("flymake-makehash" function (:arguments ("&optional" "test")) nil [2473 2659]) ("defalias" code nil nil [2661 2914]) ("defalias" code nil nil [2916 3126]) ("defalias" code nil nil [3128 3714]) ("defalias" code nil nil [3716 3844]) ("defalias" code nil nil [3846 4040]) ("defalias" code nil nil [4042 4212]) ("flymake-popup-menu" function (:arguments ("menu-data")) nil [4215 5244]) ("flymake-make-emacs-menu" function (:arguments ("menu-data")) nil [5246 5772]) ("if" code nil nil [5774 6259]) ("unless" code nil nil [6271 7283]) ("flymake-log-level" variable (:default-value -1) nil [7337 7534]) ("flymake-log" function (:arguments ("level" "text" "&rest" "args")) nil [7536 8146]) ("flymake-ins-after" function (:arguments ("list" "pos" "val")) nil [8148 8353]) ("flymake-set-at" function (:arguments ("list" "pos" "val")) nil [8355 8520]) ("flymake-processes" variable nil nil [8522 8600]) ("flymake-output-residual" variable nil nil [8602 8638]) ("make-variable-buffer-local" code nil nil [8640 8693]) ("flymake-allowed-file-name-masks" variable (:user-visible-flag t :default-value (quote (("\\.c\\'" flymake-simple-make-init) ("\\.cpp\\'" flymake-simple-make-init) ("\\.xml\\'" flymake-xml-init) ("\\.html?\\'" flymake-xml-init) ("\\.cs\\'" flymake-simple-make-init) ("\\.pl\\'" flymake-perl-init) ("\\.h\\'" flymake-master-make-header-init flymake-master-cleanup) ("\\.java\\'" flymake-simple-make-java-init flymake-simple-java-cleanup) ("[0-9]+\\.tex\\'" flymake-master-tex-init flymake-master-cleanup) ("\\.tex\\'" flymake-simple-tex-init) ("\\.idl\\'" flymake-simple-make-init)))) nil [8695 9728]) ("flymake-get-file-name-mode-and-masks" function (:arguments ("file-name")) nil [9730 10261]) ("flymake-can-syntax-check-file" function (:arguments ("file-name")) nil [10263 10460]) ("flymake-get-init-function" function (:arguments ("file-name")) nil [10462 10728]) ("flymake-get-cleanup-function" function (:arguments ("file-name")) nil [10730 10925]) ("flymake-get-real-file-name-function" function (:arguments ("file-name")) nil [10927 11080]) ("flymake-buildfile-dirs" variable (:default-value (quote ("." ".." "../.." "../../.." "../../../.." "../../../../.." "../../../../../.." "../../../../../../.." "../../../../../../../.." "../../../../../../../../.." "../../../../../../../../../.." "../../../../../../../../../../.."))) nil [11082 11420]) ("flymake-find-buildfile-cache" variable (:default-value (flymake-makehash (quote equal))) nil [11422 11485]) ("flymake-get-buildfile-from-cache" function (:arguments ("dir-name")) nil [11487 11588]) ("flymake-add-buildfile-to-cache" function (:arguments ("dir-name" "buildfile")) nil [11590 11709]) ("flymake-clear-buildfile-cache" function nil nil [11711 11792]) ("flymake-find-buildfile" function (:arguments ("buildfile-name" "source-dir-name")) nil [11794 12776]) ("flymake-fix-file-name" function (:arguments ("name")) nil [12778 13009]) ("flymake-same-files" function (:arguments ("file-name-one" "file-name-two")) nil [13011 13255]) ("flymake-master-file-dirs" variable (:default-value (quote ("." "./src" "./UnitTest"))) nil [13257 13407]) ("flymake-master-file-count-limit" variable (:default-value 32) nil [13409 13531]) ("flymake-included-file-name" variable nil nil [13608 13643]) ("flymake-find-possible-master-files" function (:arguments ("file-name" "master-file-dirs" "masks")) nil [13645 15170]) ("flymake-master-file-compare" function (:arguments ("file-one" "file-two")) nil [15172 15596]) ("flymake-check-file-limit" variable (:default-value 8192) nil [15598 15745]) ("flymake-check-patch-master-file-buffer" function (:arguments ("master-file-temp-buffer" "master-file-name" "patched-master-file-name" "source-file-name" "patched-source-file-name" "include-dirs" "regexp")) nil [15747 18547]) ("flymake-replace-region" function (:arguments ("beg" "end" "rep")) nil [18549 18811]) ("flymake-read-file-to-temp-buffer" function (:arguments ("file-name")) nil [18813 19150]) ("flymake-copy-buffer-to-temp-buffer" function (:arguments ("buffer")) nil [19152 19465]) ("flymake-check-include" function (:arguments ("source-file-name" "inc-name" "include-dirs")) nil [19467 20091]) ("flymake-find-buffer-for-file" function (:arguments ("file-name")) nil [20093 20330]) ("flymake-create-master-file" function (:arguments ("source-file-name" "patched-source-file-name" "get-incl-dirs-f" "create-temp-f" "masks" "include-regexp")) nil [20332 22025]) ("flymake-save-buffer-in-file" function (:arguments ("file-name")) nil [22027 22294]) ("flymake-save-string-to-file" function (:arguments ("file-name" "data")) nil [22296 22432]) ("flymake-read-file-to-string" function (:arguments ("file-name")) nil [22434 22646]) ("flymake-process-filter" function (:arguments ("process" "output")) nil [22648 23060]) ("flymake-process-sentinel" function (:arguments ("process" "event")) nil [23062 24481]) ("flymake-post-syntax-check" function (:arguments ("exit-status" "command")) nil [24483 25696]) ("flymake-parse-output-and-residual" function (:arguments ("output")) nil [25698 26294]) ("flymake-parse-residual" function nil nil [26296 26581]) ("flymake-er-make-er" function (:arguments ("line-no" "line-err-info-list")) nil [26583 26674]) ("flymake-er-get-line" function (:arguments ("err-info")) nil [26676 26733]) ("flymake-er-get-line-err-info-list" function (:arguments ("err-info")) nil [26735 26806]) ("flymake-ler" type (:members ("file" "line" "type" "text" "full-file") :type "struct") nil [26808 26986]) ("flymake-ler-set-file" function (:arguments ("line-err-info" "file")) nil [26988 27300]) ("flymake-ler-set-full-file" function (:arguments ("line-err-info" "full-file")) nil [27302 27624]) ("flymake-ler-set-line" function (:arguments ("line-err-info" "line")) nil [27626 27938]) ("flymake-get-line-err-count" function (:arguments ("line-err-info-list" "type")) nil [27940 28368]) ("flymake-get-err-count" function (:arguments ("err-info-list" "type")) nil [28370 28749]) ("flymake-fix-line-numbers" function (:arguments ("err-info-list" "min-line" "max-line")) nil [28751 29740]) ("flymake-highlight-err-lines" function (:arguments ("err-info-list")) nil [29742 29965]) ("flymake-overlay-p" function (:arguments ("ov")) nil [29967 30110]) ("flymake-make-overlay" function (:arguments ("beg" "end" "tooltip-text" "face" "mouse-face")) nil [30112 30685]) ("flymake-delete-own-overlays" function nil nil [30687 30938]) ("flymake-region-has-flymake-overlays" function (:arguments ("beg" "end")) nil [30940 31362]) ("flymake-errline" variable (:default-value (quote ((((class color)) (:background "LightPink")) (t (:bold t))))) nil [31364 31642]) ("flymake-warnline" variable (:default-value (quote ((((class color)) (:background "LightBlue2")) (t (:bold t))))) nil [31644 31797]) ("flymake-highlight-line" function (:arguments ("line-no" "line-err-info-list")) nil [31799 32854]) ("flymake-parse-err-lines" function (:arguments ("err-info-list" "lines")) nil [32856 34050]) ("flymake-split-output" function (:arguments ("output")) nil [34052 34566]) ("flymake-reformat-err-line-patterns-from-compile-el" function (:arguments ("original-list")) nil [34568 35275]) ("compile" include nil nil [35277 35295]) ("flymake-err-line-patterns" variable (:default-value (append (quote (("\\(\\([a-zA-Z]:\\)?[^:(	
]+\\)(\\([0-9]+\\)) : \\(\\(error\\|warning\\|fatal error\\) \\(C[0-9]+\\):[ 	
]*\\(.+\\)\\)" 1 3 nil 4) ("\\(\\([a-zA-Z]:\\)?[^:(	
]+\\):\\([0-9]+\\):[0-9]+:[0-9]+:[0-9]+: \\(\\(Error\\|Warning\\|Caution\\|Semantic Error\\):[ 	
]*\\(.+\\)\\)" 1 3 nil 4) ("midl[ ]*:[ ]*\\(command line error .*\\)" nil nil nil 1) ("\\(\\([a-zA-Z]:\\)?[^:(	
]+\\)(\\([0-9]+\\),[0-9]+): \\(\\(error\\|warning\\|fatal error\\) \\(CS[0-9]+\\):[ 	
]*\\(.+\\)\\)" 1 3 nil 4) ("\\(.*\\) at \\([^ 
]+\\) line \\([0-9]+\\)[,.
]" 2 3 nil 1) (" *\\(\\[javac\\]\\)? *\\(\\([a-zA-Z]:\\)?[^:(	
]+\\):\\([0-9]+\\):[ 	
]*\\(.+\\)" 2 4 nil 5))) (flymake-reformat-err-line-patterns-from-compile-el compilation-error-regexp-alist-alist))) nil [35297 36704]) ("flymake-parse-line" function (:arguments ("line")) nil [37260 38646]) ("flymake-find-err-info" function (:arguments ("err-info-list" "line-no")) nil [38648 39232]) ("flymake-line-err-info-is-less-or-equal" function (:arguments ("line-one" "line-two")) nil [39234 39780]) ("flymake-add-line-err-info" function (:arguments ("line-err-info-list" "line-err-info")) nil [39782 40672]) ("flymake-add-err-info" function (:arguments ("err-info-list" "line-err-info")) nil [40674 41908]) ("flymake-get-project-include-dirs-imp" function (:arguments ("basedir")) nil [41910 43116]) ("flymake-get-project-include-dirs-function" variable (:default-value (quote flymake-get-project-include-dirs-imp)) nil [43118 43321]) ("flymake-get-project-include-dirs" function (:arguments ("basedir")) nil [43323 43435]) ("flymake-get-system-include-dirs" function nil nil [43437 43647]) ("flymake-project-include-dirs-cache" variable (:default-value (flymake-makehash (quote equal))) nil [43649 43718]) ("flymake-get-project-include-dirs-from-cache" function (:arguments ("base-dir")) nil [43720 43838]) ("flymake-add-project-include-dirs-to-cache" function (:arguments ("base-dir" "include-dirs")) nil [43840 43982]) ("flymake-clear-project-include-dirs-cache" function nil nil [43984 44082]) ("flymake-get-include-dirs" function (:arguments ("base-dir")) nil [44084 44317]) ("flymake-safe-delete-file" function (:arguments ("file-name")) nil [44616 44787]) ("flymake-safe-delete-directory" function (:arguments ("dir-name")) nil [44789 45043]) ("flymake-compilation-prevents-syntax-check" variable (:default-value t) nil [45045 45213]) ("flymake-start-syntax-check" function (:user-visible-flag t) nil [45215 46471]) ("flymake-start-syntax-check-process" function (:arguments ("cmd" "args" "dir")) nil [46473 47847]) ("flymake-kill-process" function (:arguments ("proc")) nil [47849 48134]) ("flymake-stop-all-syntax-checks" function (:user-visible-flag t) nil [48136 48309]) ("flymake-compilation-is-running" function nil nil [48311 48425]) ("flymake-compile" function (:user-visible-flag t) nil [48427 48591]) ("flymake-no-changes-timeout" variable (:default-value 0.5) nil [48593 48733]) ("flymake-on-timer-event" function (:arguments ("buffer")) nil [48735 49277]) ("flymake-current-line-no" function nil nil [49279 49427]) ("flymake-count-lines" function nil nil [49429 49544]) ("flymake-display-err-menu-for-current-line" function (:user-visible-flag t) nil [49546 50213]) ("flymake-make-err-menu-data" function (:arguments ("line-no" "line-err-info-list")) nil [50215 51689]) ("flymake-goto-file-and-line" function (:arguments ("file" "line")) nil [51691 51939]) ("flymake-mode-line" variable nil nil [51976 52006]) ("make-variable-buffer-local" code nil nil [52008 52055]) ("flymake-mode-line-e-w" variable nil nil [52057 52091]) ("make-variable-buffer-local" code nil nil [52093 52144]) ("flymake-mode-line-status" variable nil nil [52146 52183]) ("make-variable-buffer-local" code nil nil [52185 52239]) ("flymake-report-status" function (:arguments ("e-w" "&optional" "status")) nil [52241 52715]) ("flymake-display-warning" function (:arguments ("warning")) nil [52717 52813]) ("flymake-gui-warnings-enabled" variable (:default-value t) nil [52815 52927]) ("flymake-report-fatal-status" function (:arguments ("status" "warning")) nil [52929 53324]) ("flymake-start-syntax-check-on-find-file" variable (:default-value t) nil [53326 53451]) ("define-minor-mode" code nil nil [53468 54879]) ("flymake-mode-on" function nil nil [54896 55038]) ("flymake-mode-off" function nil nil [55055 55200]) ("flymake-start-syntax-check-on-newline" variable (:default-value t) nil [55202 55362]) ("flymake-after-change-function" function (:arguments ("start" "stop" "len")) nil [55364 55850]) ("flymake-after-save-hook" function nil nil [55852 56142]) ("flymake-kill-buffer-hook" function nil nil [56226 56346]) ("flymake-find-file-hook" function nil nil [56348 56750]) ("flymake-get-first-err-line-no" function (:arguments ("err-info-list")) nil [56752 56908]) ("flymake-get-last-err-line-no" function (:arguments ("err-info-list")) nil [56910 57092]) ("flymake-get-next-err-line-no" function (:arguments ("err-info-list" "line-no")) nil [57094 57479]) ("flymake-get-prev-err-line-no" function (:arguments ("err-info-list" "line-no")) nil [57481 57861]) ("flymake-skip-whitespace" function nil nil [57863 57997]) ("flymake-goto-line" function (:arguments ("line-no")) nil [57999 58130]) ("flymake-goto-next-error" function (:user-visible-flag t) nil [58132 58553]) ("flymake-goto-prev-error" function (:user-visible-flag t) nil [58555 58985]) ("flymake-patch-err-text" function (:arguments ("string")) nil [58987 59121]) ("flymake-create-temp-inplace" function (:arguments ("file-name" "prefix")) nil [59169 59683]) ("flymake-create-temp-with-folder-structure" function (:arguments ("file-name" "prefix")) nil [59685 60313]) ("flymake-delete-temp-directory" function (:arguments ("dir-name")) nil [60315 60860]) ("flymake-temp-source-file-name" variable nil nil [60862 60904]) ("make-variable-buffer-local" code nil nil [60905 60964]) ("flymake-master-file-name" variable nil nil [60966 61003]) ("make-variable-buffer-local" code nil nil [61004 61058]) ("flymake-temp-master-file-name" variable nil nil [61060 61102]) ("make-variable-buffer-local" code nil nil [61103 61162]) ("flymake-base-dir" variable nil nil [61164 61193]) ("make-variable-buffer-local" code nil nil [61194 61240]) ("flymake-init-create-temp-buffer-copy" function (:arguments ("create-temp-f")) nil [61242 61687]) ("flymake-simple-cleanup" function nil nil [61689 61898]) ("flymake-get-real-file-name" function (:arguments ("file-name-from-err-msg")) nil [61900 63473]) ("flymake-get-full-patched-file-name" function (:arguments ("file-name-from-err-msg" "base-dirs" "files")) nil [63475 64535]) ("flymake-get-full-nonpatched-file-name" function (:arguments ("file-name-from-err-msg" "base-dirs")) nil [64537 65173]) ("flymake-init-find-buildfile-dir" function (:arguments ("source-file-name" "buildfile-name")) nil [65175 65773]) ("flymake-init-create-temp-source-and-master-buffer-copy" function (:arguments ("get-incl-dirs-f" "create-temp-f" "master-file-masks" "include-regexp")) nil [65775 66745]) ("flymake-master-cleanup" function nil nil [66747 66866]) ("flymake-get-syntax-check-program-args" function (:arguments ("source-file-name" "base-dir" "use-relative-base-dir" "use-relative-source" "get-cmd-line-f")) nil [66909 67438]) ("flymake-get-make-cmdline" function (:arguments ("source" "base-dir")) nil [67440 67678]) ("flymake-get-ant-cmdline" function (:arguments ("source" "base-dir")) nil [67680 67896]) ("flymake-simple-make-init-impl" function (:arguments ("create-temp-f" "use-relative-base-dir" "use-relative-source" "build-file-name" "get-cmdline-f")) nil [67898 68705]) ("flymake-simple-make-init" function nil nil [68707 68846]) ("flymake-master-make-init" function (:arguments ("get-incl-dirs-f" "master-file-masks" "include-regexp")) nil [68848 69617]) ("flymake-find-make-buildfile" function (:arguments ("source-dir")) nil [69619 69716]) ("flymake-master-make-header-init" function nil nil [69740 69978]) ("flymake-simple-make-java-init" function nil nil [70005 70167]) ("flymake-simple-ant-java-init" function nil nil [70169 70330]) ("flymake-simple-java-cleanup" function nil nil [70332 70641]) ("flymake-perl-init" function nil nil [70684 71010]) ("flymake-get-tex-args" function (:arguments ("file-name")) nil [71052 71220]) ("flymake-simple-tex-init" function nil nil [71222 71349]) ("flymake-master-tex-init" function nil nil [71351 71768]) ("flymake-get-include-dirs-dot" function (:arguments ("base-dir")) nil [71770 71826]) ("flymake-xml-init" function nil nil [71868 71991]) ("flymake" package nil nil [71993 72011]))
    :file "flymake.el"
    :pointmax 72088
    :unmatched-syntax 'nil
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre4"
  :semanticdb-version "2.0pre4"
  )
