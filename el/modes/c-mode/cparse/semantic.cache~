;; Object cparse/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "cparse/"
  :tables (list 
   (semanticdb-table "cparse.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("cparse-version" variable nil nil [7905 7952]) ("cparse-search-system" variable (:user-visible-flag t :default-value t) nil [7954 8104]) ("cparse-noisy-p" variable (:user-visible-flag t :default-value t) nil [8106 8232]) ("cparse-save-filedb" variable (:user-visible-flag t) nil [8234 8326]) ("cparse-brief-find-file-hooks" variable (:user-visible-flag t) nil [8328 8547]) ("cparse-query-depth" variable (:user-visible-flag t :default-value 2) nil [8549 8656]) ("cparse-include-list" variable (:user-visible-flag t :default-value (quote ("/usr/include" "." ".."))) nil [8658 8791]) ("cparse-filedb-rc" variable (:user-visible-flag t :default-value "~/.cparserc") nil [8793 8888]) ("cparse-filedb-save-hook" variable (:user-visible-flag t) nil [8890 8990]) ("cparse-depthmarker" variable nil nil [8992 9124]) ("cparse-tag" variable nil nil [9126 9222]) ("cparse-mainlist" variable nil nil [9224 9316]) ("cparse-parsesize" variable nil nil [9318 9454]) ("cparse-reference-buffer" variable nil nil [9456 9575]) ("cparse-show-comments" variable nil nil [9577 9646]) ("cparse-filedb" variable nil nil [9648 9710]) ("cparse-filedb-modified" variable nil nil [9712 9800]) ("cparse-filedb-loaded" variable nil nil [9802 9888]) ("cparse-PARSE-keymap" variable nil nil [9890 9954]) ("cparse-added-hook-p" variable nil nil [9956 10033]) ("if" code nil nil [10035 10455]) ("cparse-num-elts" variable (:constant-flag t :default-value 7) nil [10457 10538]) ("cparse-comment-regexp" variable (:constant-flag t :default-value "\\(/\\*\\([^*
]\\|*\\)*\\*/\\)") nil [10540 10637]) ("cparse-file-regexp" variable (:constant-flag t :default-value "\\([--_A-Za-z.0-9/~$#^]+\\)") nil [10638 10841]) ("cparse-symbol-regexp" variable (:constant-flag t :default-value "\\(\\w\\|\\s_\\)+") nil [10842 10933]) ("cparse-optsymbol-regexp" variable (:constant-flag t :default-value "\\(\\w\\|\\s_\\)*") nil [10934 11027]) ("cparse-struct-regexp" variable (:constant-flag t :default-value "\\(struct\\|union\\|enum\\)") nil [11028 11148]) ("cparse-modifiers-regexp" variable (:constant-flag t :default-value "\\(_export\\|register\\|const\\|extern\\|static\\|volitile\\|unsigned\\)") nil [11149 11419]) ("cparse-basic-type-regexp" variable (:constant-flag t :default-value "\\(void\\|char\\|short\\|int\\|long\\|float\\|double\\)") nil [11420 11543]) ("cparse-keywords-regexp" variable (:constant-flag t :default-value "\\(if\\|else\\|return\\|do\\|while\\|for\\|switch\\|case\\|sizeof\\)") nil [11544 11687]) ("cparse-arrayparts-regexp" variable (:constant-flag t :default-value "[^]]") nil [11689 12003]) ("cparse-dirty-whitespace" variable (:constant-flag t :default-value (concat "\\(" cparse-comment-regexp "\\|\\s-\\|
\\)")) nil [12005 12155]) ("cparse-typedef-regexp" variable (:constant-flag t :default-value (concat "\\(" cparse-modifiers-regexp "\\s-+\\)*" "\\(" cparse-struct-regexp "\\s-+\\)?" cparse-symbol-regexp "\\(\\s-*\\*\\s-*\\|\\s-+\\)")) nil [12157 12431]) ("cparse-optarray-regexp" variable (:constant-flag t :default-value (concat "\\(\\s-*\\[\\s-*" cparse-arrayparts-regexp "*\\s-*\\]\\)*")) nil [12438 12644]) ("cparse-isarray-regexp" variable (:constant-flag t :default-value "\\s-*\\[") nil [12646 12789]) ("cparse-anyvardef-regexp" variable (:constant-flag t :default-value (concat "\\(" cparse-symbol-regexp cparse-optarray-regexp "\\s-*\\(=\\|,\\|;\\)\\)")) nil [12791 13076]) ("cparse-anyfndef-regexp" variable (:constant-flag t :default-value (concat "\\(" cparse-symbol-regexp "\\)" "\\s-*\\(_+P\\)?\\s-*(")) nil [13081 13305]) ("cparse-toplevel-regexp" variable (:constant-flag t :default-value (concat "\\(" "/\\*\\|" "#\\s-*include\\|" "#\\s-*define\\|" "#\\s-*\\(if\\|else\\|endif\\|pragma\\)\\|" "^DEFUN\\|" "DEFVAR_\\|" "\\(\\<typedef\\s-+\\)?" cparse-struct-regexp "\\s-+" cparse-optsymbol-regexp cparse-dirty-whitespace "*{\\|" "typedef\\s-+" cparse-typedef-regexp cparse-symbol-regexp "\\s-*;\\|" "\\<" cparse-typedef-regexp "\\)")) nil [13307 13926]) ("fset" code nil nil [14023 14152]) ("cparse-toplevel" function (:user-visible-flag t :arguments ("&optional" "name" "fast")) nil [14154 26394]) ("cparse-makev" function (:arguments ("type" "str" "name" "start" "end" "&optional" "array-part")) nil [26396 26708]) ("cparse-type" function (:arguments ("v")) nil [26710 26793]) ("cparse-str" function (:arguments ("v")) nil [26795 26879]) ("cparse-name" function (:arguments ("v")) nil [26881 26964]) ("cparse-start" function (:arguments ("v")) nil [26966 27060]) ("cparse-end" function (:arguments ("v")) nil [27062 27152]) ("cparse-datum" function (:arguments ("v")) nil [27154 27252]) ("cparse-array" function (:arguments ("v")) nil [27254 27348]) ("cparse-returns" function (:arguments ("v")) nil [27350 28079]) ("cparse-expand-list" function (:arguments ("l")) nil [28081 28960]) ("PARTS-mode" function (:arguments ("b" "list")) nil [28997 29935]) ("cparse-listparts" function (:user-visible-flag t :arguments ("&optional" "subpart" "list")) nil [29937 30836]) ("cparse-write-parts" function (:arguments ("tmp-o")) nil [30838 32065]) ("cparse-update-p" function (:user-visible-flag t) nil [32067 32263]) ("cparse-nuke-buffer" function (:user-visible-flag t) nil [32265 32427]) ("cparse-toggle-comments" function (:user-visible-flag t :arguments ("&optional" "set")) nil [32429 33014]) ("cparse-find" function (:user-visible-flag t) nil [33016 33159]) ("cparse-goto-line" function (:user-visible-flag t :arguments ("&optional" "go")) nil [33161 33407]) ("cparse-goto-vect-def" function (:arguments ("vect" "&optional" "go" "buff")) nil [33411 34042]) ("cparse-open" function (:user-visible-flag t) nil [34044 34438]) ("cparse-open-driver" function (:arguments ("v")) nil [34440 36445]) ("cparse-line2vect" function nil nil [36447 36877]) ("cparse-one-window-ok" function (:arguments ("p1" "p2")) nil [36912 37633]) ("cparse-on-major-sexp" function (:user-visible-flag t) nil [37635 38242]) ("cparse-enclosing-expression" function (:user-visible-flag t :arguments ("&optional" "num" "fast")) nil [38244 40280]) ("cparse-find-name" function (:user-visible-flag t :arguments ("name")) nil [40282 40440]) ("cparse-open-on-line" function (:user-visible-flag t) nil [40442 40642]) ("cparse-findname" function (:arguments ("name" "&optional" "mods")) nil [40644 42785]) ("cparse-readparams" function (:arguments ("v")) nil [42787 43664]) ("cparse-read-ansic-params" function (:arguments ("v")) nil [43666 44828]) ("cparse-read-standardc-params" function (:arguments ("v")) nil [44830 46045]) ("cparse-find-type-search" function (:arguments ("name")) nil [46048 46770]) ("cparse-find-type-list-breadth" function (:arguments ("name" "list")) nil [46772 48574]) ("cparse-findtype" function (:user-visible-flag t :arguments ("name" "&optional" "buf" "fname")) nil [48576 49722]) ("cparse-trim-word" function (:arguments ("word")) nil [49724 50331]) ("cparse-load-header" function (:user-visible-flag t :arguments ("header")) nil [50361 50959]) ("cparse-find-header" function (:arguments ("header" "&optional" "find" "parse" "popup")) nil [50961 52970]) ("cparse-fast-find" function (:arguments ("file")) nil [52972 53196]) ("cparse-filedb-find" function (:arguments ("filename")) nil [53234 53689]) ("cparse-filedb-add" function (:arguments ("buffer")) nil [53691 54299]) ("cparse-filedb-save" function (:user-visible-flag t) nil [54301 54808]) ("if" code nil nil [54814 54962]) ("cparse" package nil nil [54980 54997]))
    :file "cparse.el"
    :pointmax 54998
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0beta3"
  :semanticdb-version "2.0beta3"
  )
