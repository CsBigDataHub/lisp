;; Object el-lib/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "el-lib/"
  :tables (list 
   (semanticdb-table "advice.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("advice-preload" package nil nil [80530 80555]) ("advice-preload" include (:directory "advice.el") nil [80596 80633]) ("defgroup" code nil nil [80693 80853]) ("ad-version" variable (:constant-flag t :default-value "2.14") nil [80855 80883]) ("ad-redefinition-action" variable (:user-visible-flag t :default-value (quote warn)) nil [80900 81667]) ("ad-default-compilation-action" variable (:user-visible-flag t :default-value (quote maybe)) nil [81684 82353]) ("ad-substitute-tree" function (:arguments ("sUbTrEe-TeSt" "fUnCtIoN" "tReE")) nil [82529 83397]) ("ad-copy-tree" function (:arguments ("tree")) nil [83449 83628]) ("ad-dolist" function (:arguments ("varform" "&rest" "body")) nil [83630 84968]) ("ad-do-return" function (:arguments ("value")) nil [84970 85031]) ("if" code nil nil [85033 85119]) ("ad-save-real-definition" function (:arguments ("function")) nil [85437 86128]) ("ad-save-real-definitions" function nil nil [86130 86466]) ("ad-save-real-definitions" code nil nil [86468 86494]) ("ad-advised-functions" variable nil nil [87150 87183]) ("ad-pushnew-advised-function" function (:arguments ("function")) nil [87185 87472]) ("ad-pop-advised-function" function (:arguments ("function")) nil [87474 87689]) ("ad-do-advised-functions" function (:arguments ("varform" "&rest" "body")) nil [87691 88134]) ("if" code nil nil [88136 88250]) ("ad-get-advice-info" function (:arguments ("function")) nil [88252 88327]) ("ad-set-advice-info" function (:arguments ("function" "advice-info")) nil [88329 88429]) ("ad-copy-advice-info" function (:arguments ("function")) nil [88431 88522]) ("ad-is-advised" function (:arguments ("function")) nil [88524 88719]) ("ad-initialize-advice-info" function (:arguments ("function")) nil [88721 88957]) ("ad-get-advice-info-field" function (:arguments ("function" "field")) nil [88959 89126]) ("ad-set-advice-info-field" function (:arguments ("function" "field" "value")) nil [89128 89605]) ("ad-is-active" function (:arguments ("function")) nil [89667 89801]) ("ad-make-advice" function (:arguments ("name" "protect" "enable" "definition")) nil [89943 90304]) ("ad-advice-name" function (:arguments ("advice")) nil [90404 90459]) ("ad-advice-protected" function (:arguments ("advice")) nil [90460 90522]) ("ad-advice-enabled" function (:arguments ("advice")) nil [90523 90583]) ("ad-advice-definition" function (:arguments ("advice")) nil [90584 90647]) ("ad-advice-set-enabled" function (:arguments ("advice" "flag")) nil [90649 90727]) ("ad-class-p" function (:arguments ("thing")) nil [90729 90788]) ("ad-name-p" function (:arguments ("thing")) nil [90789 90844]) ("ad-position-p" function (:arguments ("thing")) nil [90845 90930]) ("ad-advice-classes" variable (:default-value (quote (before around after activation deactivation))) nil [91031 91104]) ("ad-has-enabled-advice" function (:arguments ("function" "class")) nil [91106 91338]) ("ad-has-redefining-advice" function (:arguments ("function")) nil [91340 91700]) ("ad-has-any-advice" function (:arguments ("function")) nil [91702 91961]) ("ad-get-enabled-advices" function (:arguments ("function" "class")) nil [91963 92265]) ("ad-activate-internal" function (:arguments ("function" "&optional" "compile")) nil [93561 93699]) ("ad-activate-internal-off" function (:arguments ("function" "&optional" "compile")) nil [93738 93880]) ("ad-activate-on-top-level" variable (:default-value t) nil [93950 93985]) ("ad-with-auto-activation-disabled" function (:arguments ("&rest" "body")) nil [93987 94096]) ("ad-safe-fset" function (:arguments ("symbol" "definition")) nil [94098 94287]) ("ad-make-origname" function (:arguments ("function")) nil [94817 94950]) ("ad-get-orig-definition" function (:arguments ("function")) nil [94952 95128]) ("ad-set-orig-definition" function (:arguments ("function" "definition")) nil [95130 95265]) ("ad-clear-orig-definition" function (:arguments ("function")) nil [95267 95377]) ("ad-read-advised-function" function (:arguments ("&optional" "prompt" "predicate" "default")) nil [95451 96804]) ("ad-advice-class-completion-table" variable (:default-value (mapcar (lambda (class) (list (symbol-name class))) ad-advice-classes)) nil [96806 96923]) ("ad-read-advice-class" function (:arguments ("function" "&optional" "prompt" "default")) nil [96925 97625]) ("ad-read-advice-name" function (:arguments ("function" "class" "&optional" "prompt")) nil [97627 98360]) ("ad-read-advice-specification" function (:arguments ("&optional" "prompt")) nil [98362 98768]) ("ad-last-regexp" variable nil nil [98807 98833]) ("ad-read-regexp" function (:arguments ("&optional" "prompt")) nil [98835 99176]) ("ad-find-advice" function (:arguments ("function" "class" "name")) nil [99306 99471]) ("ad-advice-position" function (:arguments ("function" "class" "name")) nil [99473 99787]) ("ad-find-some-advice" function (:arguments ("function" "class" "name")) nil [99789 100545]) ("ad-enable-advice-internal" function (:arguments ("function" "class" "name" "flag")) nil [100547 101496]) ("ad-enable-advice" function (:user-visible-flag t :arguments ("function" "class" "name")) nil [101513 101932]) ("ad-disable-advice" function (:user-visible-flag t :arguments ("function" "class" "name")) nil [101949 102374]) ("ad-enable-regexp-internal" function (:arguments ("regexp" "class" "flag")) nil [102376 102858]) ("ad-enable-regexp" function (:user-visible-flag t :arguments ("regexp")) nil [102860 103256]) ("ad-disable-regexp" function (:user-visible-flag t :arguments ("regexp")) nil [103258 103659]) ("ad-remove-advice" function (:user-visible-flag t :arguments ("function" "class" "name")) nil [103661 104318]) ("ad-add-advice" function (:arguments ("function" "advice" "class" "position")) nil [104335 106062]) ("ad-macrofy" function (:arguments ("definition")) nil [106176 106305]) ("ad-lambdafy" function (:arguments ("definition")) nil [106307 106429]) ("ad-special-forms" variable (:default-value (let ((tem (quote (and catch cond condition-case defconst defmacro defun defvar function if interactive let let* or prog1 prog2 progn quote save-current-buffer save-excursion save-restriction save-window-excursion setq setq-default unwind-protect while with-output-to-temp-buffer)))) (if (fboundp (quote track-mouse)) (push (quote track-mouse) tem)) (mapcar (quote symbol-function) tem))) nil [106567 107045]) ("ad-special-form-p" function (:arguments ("definition")) nil [107047 107179]) ("ad-interactive-p" function (:arguments ("definition")) nil [107181 107308]) ("ad-subr-p" function (:arguments ("definition")) nil [107310 107409]) ("ad-macro-p" function (:arguments ("definition")) nil [107411 107523]) ("ad-lambda-p" function (:arguments ("definition")) nil [107525 107651]) ("ad-advice-p" function (:arguments ("definition")) nil [107713 107837]) ("if" code nil nil [107934 108077]) ("ad-compiled-p" function (:arguments ("definition")) nil [108079 108313]) ("ad-compiled-code" function (:arguments ("compiled-definition")) nil [108315 108528]) ("ad-lambda-expression" function (:arguments ("definition")) nil [108530 108802]) ("ad-arglist" function (:arguments ("definition" "&optional" "name")) nil [108804 109421]) ("ad-define-subr-args" function (:arguments ("subr" "arglist")) nil [109548 109641]) ("ad-undefine-subr-args" function (:arguments ("subr")) nil [109642 109717]) ("ad-subr-args-defined-p" function (:arguments ("subr")) nil [109718 109790]) ("ad-get-subr-args" function (:arguments ("subr")) nil [109791 109863]) ("ad-subr-arglist" function (:arguments ("subr-name")) nil [109865 111406]) ("ad-docstring" function (:arguments ("definition")) nil [111408 111717]) ("ad-interactive-form" function (:arguments ("definition")) nil [111719 112051]) ("ad-body-forms" function (:arguments ("definition")) nil [112053 112349]) ("ad-advised-definition-docstring-regexp" variable (:default-value "^\\$ad-doc: \\(.+\\)\\$$") nil [112462 112536]) ("ad-make-advised-definition-docstring" function (:arguments ("function")) nil [112538 112977]) ("ad-advised-definition-p" function (:arguments ("definition")) nil [112979 113345]) ("ad-definition-type" function (:arguments ("definition")) nil [113347 113716]) ("ad-has-proper-definition" function (:arguments ("function")) nil [113718 114000]) ("ad-real-definition" function (:arguments ("function")) nil [114130 114414]) ("ad-real-orig-definition" function (:arguments ("function")) nil [114416 114638]) ("ad-is-compilable" function (:arguments ("function")) nil [114640 114945]) ("ad-compile-function" function (:user-visible-flag t :arguments ("function")) nil [114947 115680]) ("ad-prognify" function (:arguments ("forms")) nil [117112 117211]) ("ad-parse-arglist" function (:arguments ("arglist")) nil [117280 117942]) ("ad-retrieve-args-form" function (:arguments ("arglist")) nil [117944 118847]) ("ad-arg-binding-field" function (:arguments ("binding" "field")) nil [118849 119022]) ("ad-list-access" function (:arguments ("position" "list")) nil [119024 119162]) ("ad-element-access" function (:arguments ("position" "list")) nil [119164 119316]) ("ad-access-argument" function (:arguments ("arglist" "index")) nil [119318 119868]) ("ad-get-argument" function (:arguments ("arglist" "index")) nil [119870 120180]) ("ad-set-argument" function (:arguments ("arglist" "index" "value-form")) nil [120182 120749]) ("ad-get-arguments" function (:arguments ("arglist" "index")) nil [120751 121374]) ("ad-set-arguments" function (:arguments ("arglist" "index" "values-form")) nil [121376 123156]) ("ad-insert-argument-access-forms" function (:arguments ("definition" "arglist")) nil [123158 124066]) ("ad-map-arglists" function (:arguments ("source-arglist" "target-arglist")) nil [124500 126455]) ("ad-make-mapped-call" function (:arguments ("source-arglist" "target-arglist" "target-function")) nil [126457 126846]) ("ad-make-single-advice-docstring" function (:arguments ("advice" "class" "&optional" "style")) nil [127463 128087]) ("help-fns" include nil nil [128089 128108]) ("ad-make-advised-docstring" function (:arguments ("function" "&optional" "style")) nil [128164 129641]) ("ad-make-plain-docstring" function (:arguments ("function")) nil [129643 129731]) ("ad-make-freeze-docstring" function (:arguments ("function")) nil [129732 129822]) ("ad-advised-arglist" function (:arguments ("function")) nil [129945 130368]) ("ad-advised-interactive-form" function (:arguments ("function")) nil [130370 130843]) ("ad-make-advised-definition" function (:arguments ("function")) nil [130910 134268]) ("ad-assemble-advised-definition" function (:arguments ("type" "args" "docstring" "interactive" "orig" "&optional" "befores" "arounds" "afters")) nil [134270 137502]) ("ad-make-hook-form" function (:arguments ("function" "hook-name")) nil [137557 137898]) ("ad-get-cache-definition" function (:arguments ("function")) nil [141210 141308]) ("ad-get-cache-id" function (:arguments ("function")) nil [141310 141400]) ("ad-set-cache" function (:arguments ("function" "definition" "id")) nil [141402 141524]) ("ad-clear-cache" function (:user-visible-flag t :arguments ("function")) nil [141526 141856]) ("ad-make-cache-id" function (:arguments ("function")) nil [141858 142790]) ("ad-get-cache-class-id" function (:arguments ("function" "class")) nil [142792 143064]) ("ad-verify-cache-class-id" function (:arguments ("cache-class-id" "advices")) nil [143066 143338]) ("ad-cache-id-verification-code" function (:arguments ("function")) nil [143736 144854]) ("ad-verify-cache-id" function (:arguments ("function")) nil [144856 145023]) ("ad-preactivate-advice" function (:arguments ("function" "advice" "class" "position")) nil [146348 147280]) ("ad-make-freeze-definition" function (:arguments ("function" "advice" "class" "position")) nil [148495 151319]) ("ad-should-compile" function (:arguments ("function" "compile")) nil [151407 152175]) ("ad-activate-advised-definition" function (:arguments ("function" "compile")) nil [152177 153329]) ("ad-handle-definition" function (:arguments ("function")) nil [153331 155290]) ("ad-activate" function (:user-visible-flag t :arguments ("function" "&optional" "compile")) nil [155385 157338]) ("defalias" code nil nil [157340 157379]) ("ad-deactivate" function (:user-visible-flag t :arguments ("function")) nil [157381 158276]) ("ad-update" function (:user-visible-flag t :arguments ("function" "&optional" "compile")) nil [158278 158634]) ("ad-unadvise" function (:user-visible-flag t :arguments ("function")) nil [158636 159065]) ("ad-recover" function (:user-visible-flag t :arguments ("function")) nil [159067 159826]) ("ad-activate-regexp" function (:user-visible-flag t :arguments ("regexp" "&optional" "compile")) nil [159828 160359]) ("ad-deactivate-regexp" function (:user-visible-flag t :arguments ("regexp")) nil [160361 160783]) ("ad-update-regexp" function (:user-visible-flag t :arguments ("regexp" "&optional" "compile")) nil [160785 161310]) ("ad-activate-all" function (:user-visible-flag t :arguments ("&optional" "compile")) nil [161312 161565]) ("ad-deactivate-all" function (:user-visible-flag t) nil [161567 161727]) ("ad-update-all" function (:user-visible-flag t :arguments ("&optional" "compile")) nil [161729 161967]) ("ad-unadvise-all" function (:user-visible-flag t) nil [161969 162123]) ("ad-recover-all" function (:user-visible-flag t) nil [162125 162570]) ("ad-defadvice-flags" variable (:default-value (quote (("protect") ("disable") ("activate") ("compile") ("preactivate") ("freeze")))) nil [162620 162732]) ("defadvice" function (:arguments ("function" "args" "&rest" "body")) nil [162749 167680]) ("ad-with-originals" function (:arguments ("functions" "&rest" "body")) nil [167710 169362]) ("if" code nil nil [169364 169466]) ("ad-define-subr-args" code nil nil [169754 169816]) ("documentation" function (:arguments ("after" "ad-advised-docstring" "first" "disable" "preact")) nil [169818 170564]) ("ad-start-advice" function (:user-visible-flag t) nil [170710 171056]) ("ad-stop-advice" function (:user-visible-flag t) nil [171058 171470]) ("ad-recover-normality" function (:user-visible-flag t) nil [171472 171835]) ("ad-start-advice" code nil nil [171837 171854]) ("advice" package nil nil [171856 171873]))
    :file "advice.el"
    :pointmax 171949
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre4"
  :semanticdb-version "2.0pre4"
  )
